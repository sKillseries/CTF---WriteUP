Write-Ups FCSC 2020

CatÃ©gorie welcome (les plus simples haha ðŸ˜‚ðŸ˜‚ðŸ˜‚ðŸ˜‚) :
â€¢	Welcome : FCSC{Bienvenue_et_bonne_chance!}
â€¢	Discord : FCSC{Flag_de_bienvenue_sur_Discord}


CatÃ©gorie intro : 
 
NES Forever (20 points):
Une fois arriver sur la page web du challenge je consulte la page puis effectue un clic droit afficher le code source de la page le 
flag est en commentaire dans le code source :
 
Le flag est : FCSC{a1cec1710b5a2423ae927a12db174337508f07b470fc0a29bfc73461f131e0c2}
 
Le Rat Conteur (20 point): 
Je tÃ©lÃ©charge le fichier flag.jpg.enc consulte les Hints et fais des recherches sur openssl et sur la structure de la commande openssl
enc -aes-128-ctr et rÃ©aliser la commande suivante 
openssl enc -aes-128-ctr -d -K 00112233445566778899aabbccddeeff -iv 00000000000000000000000000000000 -in flag.jpg.enc -out flag.jpg 
et jâ€™ouvre le fichier image JPG ci-dessous contenant le flag avec notre cher et tendre MaÃ®tre YODA.
 
Sbox (20 points): 
Ayant consulter les hints et imprimer lâ€™image jâ€™ai pu savoir Ã  quel type dâ€™opÃ©rateurs logiques correspondait chaque porte,
jâ€™ai ensuite fait le calcul pour obtenir le rÃ©sultat des diffÃ©rentes valeurs des y et trouver le flag FCSC{0101}.

SuSHi (20 points):
Lâ€™Ã©preuve la plus facile selon moi je me connecte sur le serveur SSH avec la commande 
ssh ctf@challenges2.frances-cybersecurity-challenges.fr -p 6000 tape le mot de passe ctf , 
rÃ©alise la commande ls -al visualise le fichier .flag puis effectue la commande cat .flag pour afficher le contenu du fichier ;

ctf@SuSHi:~$ ls -al
total 24
drwxr-xr-x 1 ctf-admin ctf 4096 Apr 25 10:39 .
drwxr-xr-x 1 ctf-admin ctf 4096 Apr 25 10:38 ..
-rw-r--r-- 1 ctf-admin ctf  220 May 15  2017 .bash_logout
-rw-r--r-- 1 ctf-admin ctf 3526 May 15  2017 .bashrc
-r--r--r-- 1 ctf-admin ctf   71 Apr 25 10:38 .flag
-rw-r--r-- 1 ctf-admin ctf  675 May 15  2017 .profile
ctf@SuSHi:~$ cat .flag 
FCSC{ca10e42620c4e3be1b9d63eb31c9e8ffe60ea788d3f4a8ae4abeac3dccdf5b21}
 
Petite frappe 1 (20 points):
Alors dans ce challenge il fallait analyser un fichier rapport des Ã©vÃ©nements clavier (keylogger) afin de retrouver le flag jâ€™ai
regarder la valeur KEY saisie et voir si sa valeur Ã©quivaut Ã  1 Ã  lâ€™action press et la valeur 0 lâ€™action release afin de ne pas 
ressaisir 2 fois la mÃªme lettre.

Ce qui donne le flag FCSC{UNEGENTILLEINTRODUCTION}


CatÃ©gorie Forensics :
 
AcadÃ©mie de l'investigation - C'est la rentrÃ©e (50 points):
Alors ce challenge jâ€™ai tout dâ€™abord essayÃ© de trouver son profile en utilisant volatility avec la commande 
volatility -f dmp.mem imageinfo, mais sans succÃ¨s du coup jâ€™ai utilisÃ© la commande strings dmp.mem | more qui mâ€™a permis de trouver
de faÃ§on longue et fastidieuse le flag FCSC{eedesktop:Lesage:5.4.0-4-amd64}.

CryptoLocker (200 points):
Outils utilisÃ©s : volatility
DÃ©termination du profil du fichier mÃ©moire : Volatility -f memory.dmp imageinfo
RÃ©sultats : Win7SP1x86
Listage fichier prÃ©sent dans la MFT : Volatility -f memory.dmp --profile=Win7SP1x86 mftparser 
Visualisation de deux fichiers intÃ©ressants : key.txt et flag.txt.enc
RÃ©cupÃ©ration adresse physique des fichiers:
â€¢	Key.txt = volatility -f memory.dmp --profile=Win7SP1x86 filescan | grep key.txt
â€¢	Flag.txt.enc = volatility -f memory.dmp --profile=Win7SP1x86 filescan | grep flag.txt.enc
 
Extraction des fichiers avec le plugin Dumpfiles de volatility:
â€¢	volatility -f memory.dmp --profile=Win7SP1x86 dumpfiles -Q 0x000000003e6fa100 -D dumpfiles/ -u -n -S summary.txt
â€¢	volatility -f memory.dmp --profile=Win7SP1x86 dumpfiles -Q 0x000000003ed139f0 -D extract_files/ -u -n -S summary.txt
